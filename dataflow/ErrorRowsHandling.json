{
	"name": "ErrorRowsHandling",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_emp_uk",
						"type": "DatasetReference"
					},
					"name": "employeesuk"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_azuresqldb",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_azuresqlgood",
						"type": "DatasetReference"
					},
					"name": "employee"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "Filename"
				},
				{
					"name": "FIlename2"
				}
			],
			"script": "source(output(\n\t\t{First Name} as string,\n\t\tGender as string,\n\t\t{Start Date} as string,\n\t\tSalary as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> employeesuk\nemployeesuk split(isNull(toDate({Start Date},'mm-dd-yyyy')),\n\tdisjoint: false) ~> ConditionalSplit1@(ErrorRows, GoodRows)\nConditionalSplit1@ErrorRows derive(Filename = toString('This is an error row')) ~> Filename\nConditionalSplit1@GoodRows derive(Filename = toString(\"This is a good File\")) ~> FIlename2\nFilename sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFirstName as string,\n\t\tGender as string,\n\t\tStartDate as string,\n\t\tSalary as string,\n\t\tFilename as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpostSQLs:['insert into '],\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFirstName = {First Name},\n\t\tGender,\n\t\tStartDate = {Start Date},\n\t\tSalary,\n\t\tFilename\n\t)) ~> sink1\nFIlename2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFirstName as string,\n\t\tGender as string,\n\t\tStartDate as date,\n\t\tSalary as integer,\n\t\tFilename as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> employee"
		}
	}
}